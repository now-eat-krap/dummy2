events {}

http {
  # 기본 MIME 타입 설정 (js, css 등 올바른 Content-Type 보내도록)
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  sendfile on;

  server {
    listen 80;
    server_name _;

    # React 대시보드 빌드 결과물 (index.html 등)
    root /usr/share/nginx/html;

    # ============================
    # 1) collector-js 서빙 (/apilog/*)
    # ============================
    location /apilog/ {
      # alias를 쓰면 location 경로 부분(/apilog/)을 잘라내고 이 디렉토리에서 파일을 찾는다
      alias /usr/share/nginx/html/apilog/;

      # 다른 도메인에서 이 스크립트를 script 태그로 불러올 수 있게
      # (일반 <script src=...> 는 CORS 프리플라잇 필요 없지만, ESM import() 등 생각하면 헤더는 미리 열어두는 게 편함)
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Methods "GET, OPTIONS";
      add_header Access-Control-Allow-Headers "*";

      # collector-js는 SPA가 아니니까 존재하는 파일만 응답하고 아니면 404
      try_files $uri =404;
    }

    # ============================
    # 2) API 프록시 (/api/* → FastAPI 컨테이너)
    # ============================
    location /api/ {
      proxy_pass http://api:8000;

      # 원래 요청 정보 전달 (FastAPI에서 client ip나 scheme 필요할 때 유용)
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ============================
    # 3) 대시보드 SPA 라우팅
    # ============================
    location / {
      # 정적 파일이 있으면 그대로 주고,
      # 없으면 index.html을 반환해서 프론트 라우터(React Router 등)가 처리하게 한다
      try_files $uri $uri/ /index.html;
    }
  }
}
